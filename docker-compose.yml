version: "3.2"

services:
  # 本番フロントエンド
  prod_front:
    container_name: es_editor_prod_front
    build:
      context: ./frontend
      dockerfile: prod.Dockerfile
    tty: true
    profiles:
      - prod
    ports:
      - 3000:3000

  # 本番バックエンド(仮)
  prod_back:
    container_name: es_editor_prod_back
    build:
      context: ./backend
      dockerfile: prod.Dockerfile
    tty: true
    profiles:
      - prod
    ports:
      - 5000:5000
    depends_on:
      db:
        condition: service_healthy

  # 開発フロントエンド
  dev_front:
    container_name: es_editor_dev_front
    build:
      context: .
      dockerfile: ./frontend/dev.Dockerfile
    tty: true
    profiles:
      - dev
    ports:
      - 3000:3000
    volumes:
      - type: volume
        source: clone_git
        target: /root/es-editor

  # 開発バックエンド
  dev_back:
    container_name: es_editor_dev_back
    build:
      context: .
      dockerfile: ./backend/dev.Dockerfile
    tty: true
    profiles:
      - dev
    ports:
      - 5000:5000
    volumes:
      - type: volume
        source: clone_git
        target: /root/es-editor
  
  # データベース
  db:
    container_name: es_editor_db
    build:
      context: ./db
    tty: true
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - type: bind
        source: ./db
        target: /docker-entrypoint-initdb.d
    profiles:
      - dev
      - prod
    healthcheck:
      test: "mysql --password=${MYSQL_ROOT_PASSWORD} --execute 'show databases;'"
      interval: 3s
      timeout: 30s
      retries: 10
      start_period: 0s

  clone_git:
    container_name: es_editor_clone_git
    build:
      context: .
      dockerfile: clone-git.Dockerfile
    volumes:
      - type: volume
        source: clone_git
        target: /root/es-editor

volumes:
  clone_git:
  